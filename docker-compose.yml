x-logging:
  &json-logging
  driver: json-file
  options:
    max-size: "1m"
    max-file: "3"

services:
  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle.quiz-app
    environment:
      - DOZZLE_ENABLE_ACTIONS=true
      - DOZZLE_FILTER=status=running
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      backend-link:
      localnet:
        ipv4_address: ${APP_DOZZLE_ACCESS_IP:-10.100.0.4}
    expose:
      - 8080

  https-portal:
    image: steveltn/https-portal:1.25
    container_name: https-portal.quiz-app
    restart: always
    environment:
      - STAGE=${APP_STAGE_TYPE:-local}
      - NUMBITS=4096
      - DOMAINS=${APP_DOMAINS:-'localhost -> http://django:8001'}
      - ACCESS_LOG=stdout
      - ERROR_LOG=stderr
      - HSTS_MAX_AGE=60
      - CLIENT_MAX_BODY_SIZE=32M
      - ACCESS_LOG_INCLUDE_HOST=on
      - WEBSOCKET=true
      - VPN_SERVER_IP=${APP_WIREGUARD_IP:-10.100.0.2}
    volumes:
      - https-portal-data:/var/lib/https-portal
      - static:/etc/nginx/static:ro
      - ./https-portal/bashrc:/root/.bashrc:ro
      - ./https-portal/html:/var/www/html:ro
      - ./https-portal/custom/open_ssl.rb:/opt/certs_manager/lib/open_ssl.rb:ro
      - ./https-portal/custom/x509.conf:/opt/certs_manager/x509.conf:ro
      - ./https-portal/config-templates/default.conf.erb:/var/lib/nginx-conf/default.conf.erb:ro
      - ./https-portal/config-templates/default.ssl.conf.erb:/var/lib/nginx-conf/default.ssl.conf.erb:ro
      - ./https-portal/config-templates/nginx.conf.erb:/var/lib/nginx-conf/nginx.conf.erb:ro
    depends_on:
      - django
    networks:
      backend-link:
      localnet:
        ipv4_address: ${APP_VPN_ACCESS_IP:-10.100.0.3}
    ports:
      - 80:80
      - ${APP_ACCESS_PORT:-8443}:443
    logging: *json-logging

  django:
    build:
      context: ./django
      dockerfile: Dockerfile
      args:
        - UID
        - GID
        - USERNAME=user
        - GROUPNAME=user
        - ARCHITECTURE=${APP_ARCHITECTURE:-arm64v8}
        - TIMEZONE=${APP_TIMEZONE:-UTC}
    image: django.quiz-app
    container_name: django.quiz-app
    restart: always
    env_file:
      - ./container_envs/django/.env
      - ./container_envs/postgres/.env
    environment:
      - DJANGO_TIMEZONE=${APP_TIMEZONE:-UTC}
      - DJANGO_REDIS_HOST=redis
      - DJANGO_REDIS_PORT=6379
      - DJANGO_DATABASE_HOST=postgres
      - DJANGO_DATABASE_PORT=5432
      - DJANGO_NGINX_FORWARDING_PORT=${APP_ACCESS_PORT:-8443}
    volumes:
      - static:/opt/nginx-static
      - ./statics:/var/static:ro
      - ./django/bashrc:/opt/home/.bashrc:ro
      - ./django/app:/opt/app
      - ./django/pyproject.toml:/opt/pyproject.toml
    depends_on:
      - postgres
      - redis
    networks:
      - backend-link
    expose:
      - 8001
    logging: *json-logging

  redis:
    build:
      context: ./redis
      dockerfile: Dockerfile
      args:
        - ARCHITECTURE=${APP_ARCHITECTURE:-arm64v8}
        - TIMEZONE=${APP_TIMEZONE:-UTC}
    image: redis.quiz-app
    container_name: redis.quiz-app
    restart: always
    privileged: true
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - backend-link
    expose:
      - 6379
    logging: *json-logging

  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
      args:
        - ARCHITECTURE=${APP_ARCHITECTURE:-arm64v8}
        - TIMEZONE=${APP_TIMEZONE:-UTC}
    image: postgres.quiz-app
    container_name: postgres.quiz-app
    restart: always
    env_file:
      - ./container_envs/postgres/.env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - LANG=C
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --locale=C
    volumes:
      - database:/var/lib/postgresql/data
    networks:
      - backend-link
    expose:
      - 5432
    logging: *json-logging

networks:
  backend-link:
    name: backend-quiz-app
  localnet:
    name: shared-localnet
    external: true

volumes:
  database:
    name: quiz-app-db
    driver: local
  static:
    name: quiz-app-static
    driver: local
  https-portal-data:
    name: https-portal-data
    driver: local