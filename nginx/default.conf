# If we receive X-Forwarded-Proto, pass it through; otherwise, pass along the
# scheme used to connect to this server
map $http_x_forwarded_proto $proxy_x_forwarded_proto {
  default $http_x_forwarded_proto;
  ''      $scheme;
}
# If we receive X-Forwarded-Port, pass it through; otherwise, pass along the
# server port the client connected to
map $http_x_forwarded_port $proxy_x_forwarded_port {
  default $http_x_forwarded_port;
  ''      $server_port;
}
# If we receive Upgrade, set Connection to "upgrade"; otherwise, delete any
# Connection header that may have been passed to this server
map $http_upgrade $proxy_connection {
  default upgrade;
  ''      close;
}
# Set appropriate X-Forwarded-Ssl header
map $scheme $proxy_x_forwarded_ssl {
  default off;
  https on;
}
gzip_types text/plain text/css application/javascript application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

upstream backend_app {
  ip_hash;
  server django:8001;
}

server {
  server_name _;
  listen 80;
  charset utf-8;
  access_log /var/log/nginx/access.log main;
  error_log /var/log/nginx/error.log error;
  client_max_body_size 32M;
  # Setup error page
  error_page 503 @maintenance;
  location /static/ {
    alias /etc/nginx/static/;
  }
  location ^~ /admin/ {
    # Restrict access to admin page from public network
    deny all;
  }
  location / {
    # Check maintenance mode
    set $is_maintenance false;
    if (-e /var/www/html/is_maintenance) {
      set $is_maintenance true;
    }
    if ($is_maintenance = true) {
      return 503;
    }
    proxy_pass http://backend_app;
    proxy_http_version 1.1;
    proxy_buffering off;
    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Connection        $proxy_connection;
    # Mitigate httpoxy attack (see README for details)
    proxy_set_header Proxy "";
    proxy_redirect off;
    proxy_set_header Host              $host;
    proxy_set_header X-Forwarded-Host  $server_name;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
    proxy_set_header X-Forwarded-Ssl   $proxy_x_forwarded_ssl;
    proxy_set_header X-Forwarded-Port  $proxy_x_forwarded_port;
  }
  location @maintenance {
    root /var/www/html/maintenance;
    index index.html;
    expires 0;
    rewrite ^(.*)$ /index.html break;
  }
}