<% if domain.multiple_upstreams? %>
upstream <%= domain.upstream_backend_name %> {
  <% domain.upstreams.each do |upstream| %>
    server <%= upstream[:address] %> <%= upstream[:parameters] %>;
  <% end %>
}
<% end %>

server {
  listen <%= domain.port %> ssl;
  <% if ENV['LISTEN_IPV6'] && ENV['LISTEN_IPV6'].downcase == 'true' %>
  listen [::]:<%= domain.port %> ssl;
  <% end %>
  http2 on;
  charset utf-8;
  server_name <%= domain.name %>;

  ssl_certificate <%= domain.chained_cert_path %>;
  ssl_certificate_key <%= domain.key_path %>;

  ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
  ssl_session_cache shared:SSL:50m;
  ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256;
  ssl_prefer_server_ciphers on;

  ssl_dhparam <%= dhparam_path %>;

  # Send HSTS header if configured
  <% if ENV['HSTS_MAX_AGE'] %>
    add_header Strict-Transport-Security "max-age=<%= ENV['HSTS_MAX_AGE'] %>" always;
  <% end %>

  <% if domain.access_restriction %>
    <% domain.access_restriction.each do |ip| %>
      allow <%= ip %>;
    <% end %>
    deny all;
  <% end %>

  <% if domain.basic_auth_enabled? %>
    auth_basic "Password";
    auth_basic_user_file <%= domain.htaccess_path %>;
  <% end %>

  <% if ENV['CUSTOM_NGINX_SERVER_CONFIG_BLOCK'] %>
    <%= ENV['CUSTOM_NGINX_SERVER_CONFIG_BLOCK'] %>
  <% end %>

  <% if ENV["CUSTOM_NGINX_#{domain.env_format_name}_CONFIG_BLOCK"] %>
    <%= ENV["CUSTOM_NGINX_#{domain.env_format_name}_CONFIG_BLOCK"] %>
  <% end %>
  # Setup error page
  error_page 404 @notfound;
  error_page 503 @maintenance;
  location /static/ {
    alias /etc/nginx/static/;
  }
  location ^~ /admin/ {
    # Restrict access to admin page from public network
    deny all;
  }
  <% if domain.upstream %>
  location / {
    # Check maintenance mode
    set $is_maintenance false;
    if (-e /var/www/html/is_maintenance) {
      set $is_maintenance true;
    }
    if ($is_maintenance = true) {
      return 503;
    }
    <% if ENV['DYNAMIC_UPSTREAM'] && ENV['DYNAMIC_UPSTREAM'].downcase == 'true' %>
    set $backend <%= domain.multiple_upstreams? ? domain.upstream_proto + domain.upstream_backend_name : domain.upstream %>;
    proxy_pass $backend;
    <% else %>
    proxy_pass <%= domain.multiple_upstreams? ? domain.upstream_proto + domain.upstream_backend_name : domain.upstream %>;
    <% end %>
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Port  $server_port;

    <% if ENV['WEBSOCKET'] && ENV['WEBSOCKET'].downcase == 'true' %>
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_read_timeout 2h;
    <% end %>
  }
  <% elsif domain.redirect_target_url %>
  location / {
    return    <%= ENV['REDIRECT_CODE'] || 307 %> <%= domain.redirect_target_url %>$request_uri;
  }
  <% else %>
  location / {
    return 404;
  }
  <% end %>
  location @notfound {
    root /var/www/html/errpages;
    index 404.html;
    expires 0;
  }
  location @maintenance {
    root /var/www/html/maintenance;
    index index.html;
    expires 0;
    rewrite ^(.*)$ /index.html break;
  }
}